{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of the Cluster"
            }
        },
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
            }
        },
        
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Remote desktop user Id"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Remote desktop user password. Must be a strong password"
            }
        },
        "vmImagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer",
            "metadata": {
                "description": "VM image Publisher"
            }
        },
        "vmImageOffer": {
            "type": "string",
            "defaultValue": "WindowsServerSemiAnnual",
            "metadata": {
                "description": "VM image offer"
            }
        },
        "vmImageSku": {
            "type": "string",
            "defaultValue": "datacenter-core-1803-with-containers-smalldisk",
            "metadata": {
                "description": "VM image SKU"
            }
        },
        "vmImageVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "VM image version"
            }
        },
        "loadBalancedAppPort1": {
            "type": "int",
            "defaultValue": 80,
            "metadata": {
                "description": "Input endpoint1 for the application to use. Replace it with what your application uses"
            }
        },
        "loadBalancedAppPort2": {
            "type": "int",
            "defaultValue": 8081,
            "metadata": {
                "description": "Input endpoint2 for the application to use. Replace it with what your application uses"
            }
        },

        "clusterProtectionLevel": {
            "type": "string",
            "allowedValues": [
                "None",
                "Sign",
                "EncryptAndSign"
            ],
            "defaultValue": "EncryptAndSign",
            "metadata": {
                "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
            }
        },
        "nt0InstanceCount": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "Instance count for node type"
            }
        },
        "nodeDataDrive": {
            "type": "string",
            "defaultValue": "Temp",
            "allowedValues": [
                "OS",
                "Temp"
            ],
            "metadata": {
                "description": "The drive to use to store data on a cluster node."
            }
        },
        "nodeTypeSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The VM size to use for cluster nodes."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vnt01",
            "metadata": {
                "description": "VNet Name."
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "VNet Address Range."
            }
        },
        "subnet0Name": {
            "type": "string",
            "defaultValue": "subnet01",
            "metadata": {
                "description": "subnet name"
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "VNet subnet range"
            }
        },
        "lbName": {
            "type": "string",
            "defaultValue": "lbi01",
            "metadata": {
                "description": "Load balancer name"
            }
        },
        "lbIPName": {
            "type": "string",
            "defaultValue": "pip01",
            "metadata": {
                "description": "Load balancer public ip "
            }
        },
        "supportLogStorageAccountName": {
            "type": "string",
            "defaultValue": "lodusgaasta01",
            "metadata": {
                "description": "Storage Name - Support logs "
            }
        },
        "applicationDiagnosticsStorageAccountName": {
            "type": "string",
            "defaultValue": "lodusgaasta02",
            "metadata": {
                "description": "Storage name- Diagnostics log "
            }
        },
        "vmNodeTypeName": {
            "type": "string",
            "defaultValue": "NT1",
            "metadata": {
                "description": "VM Scale set name "
            }
        },
        "tagName": {
            "type": "string",
            "defaultValue": "cluster",
            "metadata": {
                "description": "Reource tag name "
            }
        }


    },
    "variables": {
        "dnsName": "[parameters('clusterName')]",
        "vmName": "vm",
        "virtualNetworkName": "[parameters('virtualNetworkName')]",
        "addressPrefix": "[parameters('addressPrefix')]",
        "nicName": "NIC",
        "lbIPName": "[parameters('lbIPName')]",
        "overProvision": false,
        "nt0applicationStartPort": "20000",
        "nt0applicationEndPort": "30000",
        "nt0ephemeralStartPort": "49152",
        "nt0ephemeralEndPort": "65534",
        "nt0fabricTcpGatewayPort": "19000",
        "nt0fabricHttpGatewayPort": "19080",
        "subnet0Name": "[parameters('subnet0Name')]",
        "subnet0Prefix": "[parameters('subnet0Prefix')]",
        "subnet0Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnet0Name'))]",
        "supportLogStorageAccountName": "[parameters('supportLogStorageAccountName')]",
        "applicationDiagnosticsStorageAccountName": "[parameters('applicationDiagnosticsStorageAccountName')]",
        "lbName": "[parameters('lbName')]",
        "lbID0": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
        "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
        "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
        "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
        "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
        "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
        "vmNodeType0Name": "[parameters('vmNodeTypeName')]",
        "vmNodeType0Size": "[parameters('nodeTypeSize')]",
        "tagName": "[parameters('tagName')]"
    },
    "resources": [
        {
            "apiVersion": "2018-07-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('supportLogStorageAccountName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "properties": {},
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS"
            },
            "tags": {
                "resourceType": "Service Fabric",
               "clusterName": "[parameters('tagName')]"
            }
        },
        {
            "apiVersion": "2018-07-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('applicationDiagnosticsStorageAccountName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "properties": {},
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS"
            },
            "tags": {
                "resourceType": "Service Fabric",
               "clusterName": "[parameters('tagName')]"
            }
        },
        
        {
            "apiVersion": "2018-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('lbIPName')]",
            "location": "[parameters('location')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsName')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "tags": {
                "resourceType": "Service Fabric",
               "clusterName": "[parameters('tagName')]"
            }
        },
        {
            "apiVersion": "2018-08-01",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('lbIPName')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerIPConfig",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbIPName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBEAddressPool",
                        "properties": {}
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID0')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "LBHttpRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbHttpProbeID0')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AppPortLBRule1",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[parameters('loadBalancedAppPort1')]",
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[parameters('loadBalancedAppPort1')]",
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/AppPortProbe1')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AppPortLBRule2",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[parameters('loadBalancedAppPort2')]",
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[parameters('loadBalancedAppPort2')]",
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/AppPortProbe2')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "dolphinapi",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8095,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8095,
                            "idleTimeoutInMinutes": 30,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/dolphinapihealthprobe')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "eyeshareapi",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8099,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8099,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/eyesharehealthpro')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "LB-eyeshare-api-HttpRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8082,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8082,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/AppPort-eyeshare-api')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "LB-eyeshare-app-HttpRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8081,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8081,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/AppPort-eyeshare-app')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "appport-qa",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8083,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8083,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/dolphinport-qa')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "dolphinqueueapi",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8096,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8096,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/dolphinqueueapihp')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "GA-App01-UAT",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 7001,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 7001,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/GA-App01-UAT')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "GA-App02-UAT",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 7002,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 7002,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/GA-App02-UAT')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "GA-App03-UAT",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 7003,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 7003,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/GA-App03-UAT')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "relodolphinapihealthprobe",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8097,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8097,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/relodolphinapihealthprobe')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "SampleApp",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8797,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8797,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "eyesharedevelopment",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8098,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8098,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/eyesharedevelopment')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "traefik-app",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8080,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/traefik')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "gacmaster",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8094,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8094,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/gacmaster')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "VatmasterFrontEndAPI",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8093,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8093,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/VatmasterFrontEndAPI')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "gacmasterapplication",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8091,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8091,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/gacmasterapp')]"
                            },
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "gacmaster-wrapper",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": 8092,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": 8092,
                            "idleTimeoutInMinutes": 15,
                            "probe": {
                                "id": "[concat(variables('lbID0'),'/probes/gacmaster-wrapper')]"
                            },
                            "protocol": "Tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "FabricGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[variables('nt0fabricTcpGatewayPort')]",
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "FabricHttpGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[variables('nt0fabricHttpGatewayPort')]",
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AppPortProbe1",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('loadBalancedAppPort1')]",
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AppPortProbe2",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[parameters('loadBalancedAppPort2')]",
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AppPort-eyeshare-api",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8082,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "AppPort-eyeshare-app",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8081,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "dolphinapihealthprobe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8095,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "dolphinport-qa",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8083,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "eyesharehealthpro",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8099,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "dolphinqueueapihp",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8096,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "GA-App01-UAT",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 7001,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "GA-App02-UAT",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 7002,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "GA-App03-UAT",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 7003,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "relodolphinapihealthprobe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8097,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "HealthProbsSampleApp",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8797,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "eyesharedevelopment",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8098,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "traefik",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8080,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "gacmaster",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8094,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "VatmasterFrontEndAPI",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8093,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "gacmasterapp",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8091,
                            "protocol": "Tcp"
                        }
                    },
                    {
                        "name": "gacmaster-wrapper",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": 8092,
                            "protocol": "Tcp"
                        }
                    }
                    
                ],
                "inboundNatPools": [
                    {
                        "name": "LoadBalancerBEAddressNatPool",
                        "properties": {
                            "backendPort": 3389,
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPortRangeEnd": 4500,
                            "frontendPortRangeStart": 3389,
                            "protocol": "Tcp"
                        }
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
               "clusterName": "[parameters('tagName')]"
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('vmNodeType0Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [                
                "[variables('lbName')]",
                "[variables('supportLogStorageAccountName')]",
                "[variables('applicationDiagnosticsStorageAccountName')]"
            ],
            "properties": {
                "overprovision": "[variables('overProvision')]",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat('ServiceFabricNodeVmExt','_vmNodeType0Name')]",
                                "properties": {
                                    "type": "ServiceFabricNode",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                                        "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                                    },
                                    "publisher": "Microsoft.Azure.ServiceFabric",
                                    "settings": {
                                        "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                                        "nodeTypeRef": "[variables('vmNodeType0Name')]",
                                        "dataPath": "D:\\\\SvcFab",
                                        "durabilityLevel": "Bronze",
                                        "nicPrefixOverride": "10.102.129.0/24",
                                        "certificate": {
                                            "thumbprint": "97B7B0E3CC4D671B2966D37077970A0A742B8B07",
                                            "x509StoreName": "My"
                                        }
                                    },
                                    "typeHandlerVersion": "1.0"
                                }
                            },
                            {
                                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                                "properties": {
                                    "type": "IaaSDiagnostics",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                                        "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                                        "storageAccountEndPoint": "https://core.windows.net/"
                                    },
                                    "publisher": "Microsoft.Azure.Diagnostics",
                                    "settings": {
                                        "WadCfg": {
                                            "DiagnosticMonitorConfiguration": {
                                                "overallQuotaInMB": "50000",
                                                "EtwProviders": {
                                                    "EtwEventSourceProviderConfiguration": [
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Actors",
                                                            "scheduledTransferKeywordFilter": "1",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableActorEventTable"
                                                            }
                                                        },
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Services",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                                                            }
                                                        }
                                                    ],
                                                    "EtwManifestProviderConfiguration": [
                                                        {
                                                            "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                                                            "scheduledTransferLogLevelFilter": "Information",
                                                            "scheduledTransferKeywordFilter": "4611686018427387904",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricSystemEventTable"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                                    },
                                    "typeHandlerVersion": "1.5"
                                }
                            },
                            {
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.9",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "https://raw.githubusercontent.com/aravindan545/GACLab/master/Environments/ServiceFabric-LabCluster/config-docker.ps1"
                                        ],
                                        "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File config-docker.ps1"
                                    }
                                },
                                "name": "lodus-gaa-dim01"
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('nicName'), '-0')]",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('nicName'),'-',0)]",
                                            "properties": {
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbPoolID0')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[variables('lbNatPoolID0')]"
                                                    }
                                                ],
                                                "subnet": {
                                                    
                                                    "id": "/subscriptions/fd67eae4-7dae-4025-b9ea-57cfc6e377cd/resourceGroups/iodeu-shd-rgp/providers/Microsoft.Network/virtualNetworks/iodeu-shd-vnt01/subnets/iodeu-shd-sbt02"
                                                }
                                            }
                                        }
                                    ],
                                    "primary": true
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "computernamePrefix": "[variables('vmNodeType0Name')]",
                        "secrets": [
                            {
                                "sourceVault": {
                                   
                                    "id": "/subscriptions/fd67eae4-7dae-4025-b9ea-57cfc6e377cd/resourceGroups/iodeu-shd-rgp/providers/Microsoft.KeyVault/vaults/iodeu-shd-kvt01"
                                
                                },
                                "vaultCertificates": [
                                    {
                                       
                                        "certificateUrl": "https://iodeu-shd-kvt01.vault.azure.net/secrets/ClusterCertificate/9a947305ce1741e29018dff1244d2e59",
                                        "certificateStore": "My"
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[parameters('vmImagePublisher')]",
                            "offer": "[parameters('vmImageOffer')]",
                            "sku": "[parameters('vmImageSku')]",
                            "version": "[parameters('vmImageVersion')]"
                        },
                        "osDisk": {
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "caching": "ReadOnly",
                            "createOption": "FromImage"
                        },
                        "dataDisks": [
                            {
                                "lun": 0,
                                "createOption": "Empty",
                                "caching": "None",
                                "managedDisk": {
                                    "storageAccountType": "Standard_LRS"
                                },
                                "diskSizeGB": 256
                            }
                        ]
                    }
                }
            },
            "sku": {
                "name": "[variables('vmNodeType0Size')]",
                "capacity": "[parameters('nt0InstanceCount')]",
                "tier": "Standard"
            },
            "tags": {
                "resourceType": "Service Fabric",
               "clusterName": "[parameters('tagName')]"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "type": "Microsoft.ServiceFabric/clusters",
            "name": "[parameters('clusterName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('supportLogStorageAccountName')]"
            ],
            "properties": {
                "certificate": {
                    "thumbprint": "97B7B0E3CC4D671B2966D37077970A0A742B8B07",
                    "x509StoreName": "My"
                },
                "clientCertificateCommonNames": [],
                "clientCertificateThumbprints": [],
                "clusterState": "Default",
                "diagnosticsStorageAccountConfig": {
                    "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2018-07-01').primaryEndpoints.blob]",
                    "protectedAccountKeyName": "StorageAccountKey1",
                    "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2018-07-01').primaryEndpoints.queue]",
                    "storageAccountName": "[variables('supportLogStorageAccountName')]",
                    "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2018-07-01').primaryEndpoints.table]"
                },
                "fabricSettings": [
                    {
                        "parameters": [
                            {
                                "name": "ClusterProtectionLevel",
                                "value": "[parameters('clusterProtectionLevel')]"
                            }
                        ],
                        "name": "Security"
                    },
                    {
                        "name": "DnsService",
                        "parameters": [
                            {
                                "name": "IsEnabled",
                                "value": "true"
                            },
                            {
                                "name": "PartitionSuffix",
                                "value": "--"
                            },
                            {
                                "name": "PartitionPrefix",
                                "value": "--"
                            }
                        ]
                    },
                    {
                        "name": "Hosting",
                        "parameters": [
                            {
                                "name": "ContainerImageDownloadTimeout",
                                "value": "2400"
                            },
                            {
                                "name": "PruneContainerImages",
                                "value": "true"
                            },
                            {
                                "name": "ContainerImagesToSkip",
                                "value": "microsoft/windowsservercore|microsoft/nanoserver|microsoft/dotnet-frameworku|..."
                            }
                        ]
                    },
                    {
                        "name": "KtlLogger",
                        "parameters": [
                            {
                                "name": "SharedLogSizeInMB",
                                "value": "4096"
                            }
                        ]
                    }
                ],
                "managementEndpoint": "[concat('https://',reference(variables('lbIPName')).dnsSettings.fqdn,':',variables('nt0fabricHttpGatewayPort'))]",
                "nodeTypes": [
                    {
                        "name": "[variables('vmNodeType0Name')]",
                        "applicationPorts": {
                            "endPort": "[variables('nt0applicationEndPort')]",
                            "startPort": "[variables('nt0applicationStartPort')]"
                        },
                        "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
                        "durabilityLevel": "Bronze",
                        "ephemeralPorts": {
                            "endPort": "[variables('nt0ephemeralEndPort')]",
                            "startPort": "[variables('nt0ephemeralStartPort')]"
                        },
                        "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
                        "isPrimary": true,
                        "vmInstanceCount": "[parameters('nt0InstanceCount')]"
                    }
                ],
                "provisioningState": "Default",
                "reliabilityLevel": "Bronze",
                "upgradeMode": "Automatic",
                "vmImage": "Windows"
            },
            "tags": {
                "resourceType": "Service Fabric",
               "clusterName": "[parameters('tagName')]"
            }
        }
    ],
    "outputs": {
        "clusterProperties": {
            "value": "[reference(parameters('clusterName'))]",
            "type": "object"
        }
    }
}